version: '3.3'

services:
  db:
    container_name: database
    image: postgres:14
    environment:
      POSTGRES_DB: $DB_NAME
      POSTGRES_USER: $DB_USER
      POSTGRES_PASSWORD: $PG_PASSWORD
    restart: always
    ports:
      - 5433:5432
    networks:
      - tg_bot
    volumes:
      - ./postgres:/var/lib/postgresql/data

  django:
    container_name: admin_panel
    build:
      context: .
    command: >
      sh -c "
      python django_app.py migrate &&
      python manage.py runserver 0.0.0.0:8000 --noreload"
    ports:
      - 8000:8000
    networks:
      - tg_bot
    restart: always
    env_file:
      - ".env"
    depends_on:
      - db
    volumes:
      - .:/src


  bot:
    image: "${BOT_IMAGE_NAME:-tg_bot-image}"
    container_name: "${BOT_CONTAINER_NAME:-tg_bot-container}"
    stop_signal: SIGINT
    build:
      context: .
    working_dir: "/usr/src/app/${BOT_NAME:-tg_bot}"
    volumes:
      - .:/usr/src/app/${BOT_NAME:-tg_bot}
    command: python3 -m bot
    restart: always
    env_file:
      - ".env"
    networks:
      - tg_bot
    depends_on:
      - db
      - django
      - redis

  redis:
    image: redis:alpine
    restart: always
    networks:
      - tg_bot


networks:
  tg_bot:
    driver: bridge
